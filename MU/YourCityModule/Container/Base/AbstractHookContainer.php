<?php
/**
 * YourCity.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link http://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\YourCityModule\Container\Base;

use Zikula\Bundle\HookBundle\AbstractHookContainer as ZikulaHookContainer;
use Zikula\Bundle\HookBundle\Bundle\SubscriberBundle;

/**
 * Base class for hook container methods.
 */
abstract class AbstractHookContainer extends ZikulaHookContainer
{
    /**
     * Define the hook bundles supported by this module.
     *
     * @return void
     */
    protected function setupHookBundles()
    {
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.branches', 'ui_hooks', $this->__('muyourcitymodule. Branches Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.branches.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.branches.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.branches.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.branches.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.branches.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.branches.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.branches.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.branches', 'filter_hooks', $this->__('muyourcitymodule. Branches Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.branches.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.locations', 'ui_hooks', $this->__('muyourcitymodule. Locations Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.locations.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.locations.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.locations.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.locations.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.locations.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.locations.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.locations.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.locations', 'filter_hooks', $this->__('muyourcitymodule. Locations Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.locations.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.parts', 'ui_hooks', $this->__('muyourcitymodule. Parts Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.parts.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.parts.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.parts.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.parts.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.parts.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.parts.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.parts.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.parts', 'filter_hooks', $this->__('muyourcitymodule. Parts Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.parts.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.imagesoflocation', 'ui_hooks', $this->__('muyourcitymodule. Images of location Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.imagesoflocation.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.imagesoflocation.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.imagesoflocation.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.imagesoflocation.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.imagesoflocation.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.imagesoflocation.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.imagesoflocation.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.imagesoflocation', 'filter_hooks', $this->__('muyourcitymodule. Images of location Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.imagesoflocation.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.filesoflocation', 'ui_hooks', $this->__('muyourcitymodule. Files of location Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.filesoflocation.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.filesoflocation.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.filesoflocation.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.filesoflocation.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.filesoflocation.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.filesoflocation.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.filesoflocation.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.filesoflocation', 'filter_hooks', $this->__('muyourcitymodule. Files of location Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.filesoflocation.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.offers', 'ui_hooks', $this->__('muyourcitymodule. Offers Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.offers.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.offers.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.offers.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.offers.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.offers.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.offers.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.offers.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.offers', 'filter_hooks', $this->__('muyourcitymodule. Offers Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.offers.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.menusoflocation', 'ui_hooks', $this->__('muyourcitymodule. Menus of location Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.menusoflocation.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.menusoflocation.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.menusoflocation.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.menusoflocation.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.menusoflocation.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.menusoflocation.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.menusoflocation.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.menusoflocation', 'filter_hooks', $this->__('muyourcitymodule. Menus of location Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.menusoflocation.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.partsofmenu', 'ui_hooks', $this->__('muyourcitymodule. Parts of menu Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.partsofmenu.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.partsofmenu.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.partsofmenu.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.partsofmenu.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.partsofmenu.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.partsofmenu.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.partsofmenu.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.partsofmenu', 'filter_hooks', $this->__('muyourcitymodule. Parts of menu Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.partsofmenu.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.dishes', 'ui_hooks', $this->__('muyourcitymodule. Dishes Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.dishes.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.dishes.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.dishes.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.dishes.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.dishes.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.dishes.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.dishes.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.dishes', 'filter_hooks', $this->__('muyourcitymodule. Dishes Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.dishes.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.events', 'ui_hooks', $this->__('muyourcitymodule. Events Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.events.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.events.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.events.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.events.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.events.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.events.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.events.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.events', 'filter_hooks', $this->__('muyourcitymodule. Events Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.events.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.products', 'ui_hooks', $this->__('muyourcitymodule. Products Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.products.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.products.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.products.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.products.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.products.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.products.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.products.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.products', 'filter_hooks', $this->__('muyourcitymodule. Products Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.products.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.specialsoflocation', 'ui_hooks', $this->__('muyourcitymodule. Specials of location Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.specialsoflocation.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.specialsoflocation.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.specialsoflocation.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.specialsoflocation.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.specialsoflocation.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.specialsoflocation.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.specialsoflocation.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.specialsoflocation', 'filter_hooks', $this->__('muyourcitymodule. Specials of location Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.specialsoflocation.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.servicesoflocation', 'ui_hooks', $this->__('muyourcitymodule. Services of location Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.servicesoflocation.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.servicesoflocation.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.servicesoflocation.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.servicesoflocation.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.servicesoflocation.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.servicesoflocation.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.servicesoflocation.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.servicesoflocation', 'filter_hooks', $this->__('muyourcitymodule. Services of location Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.servicesoflocation.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.ui_hooks.abonnements', 'ui_hooks', $this->__('muyourcitymodule. Abonnements Display Hooks'));
        
        // Display hook for view/display templates.
        $bundle->addEvent('display_view', 'muyourcitymodule.ui_hooks.abonnements.display_view');
        // Display hook for create/edit forms.
        $bundle->addEvent('form_edit', 'muyourcitymodule.ui_hooks.abonnements.form_edit');
        // Display hook for delete dialogues.
        $bundle->addEvent('form_delete', 'muyourcitymodule.ui_hooks.abonnements.form_delete');
        // Validate input from an ui create/edit form.
        $bundle->addEvent('validate_edit', 'muyourcitymodule.ui_hooks.abonnements.validate_edit');
        // Validate input from an ui delete form.
        $bundle->addEvent('validate_delete', 'muyourcitymodule.ui_hooks.abonnements.validate_delete');
        // Perform the final update actions for a ui create/edit form.
        $bundle->addEvent('process_edit', 'muyourcitymodule.ui_hooks.abonnements.process_edit');
        // Perform the final delete actions for a ui form.
        $bundle->addEvent('process_delete', 'muyourcitymodule.ui_hooks.abonnements.process_delete');
        $this->registerHookSubscriberBundle($bundle);
        
        $bundle = new SubscriberBundle('MUYourCityModule', 'subscriber.muyourcitymodule.filter_hooks.abonnements', 'filter_hooks', $this->__('muyourcitymodule. Abonnements Filter Hooks'));
        // A filter applied to the given area.
        $bundle->addEvent('filter', 'muyourcitymodule.filter_hooks.abonnements.filter');
        $this->registerHookSubscriberBundle($bundle);
        
        
    }
}
