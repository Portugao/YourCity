{# purpose of this template: events display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUYourCityModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ event.getTitleFromDisplayPattern()|default(__('Event')) }}{% endblock %}
{% block title %}
    {% set templateTitle = event.getTitleFromDisplayPattern()|default(__('Event')) %}
    {{ templateTitle|notifyFilters('muyourcitymodule.filter_hooks.events.filter') }}{% if routeArea == 'admin' %} <small>({{ event.workflowState|muyourcitymodule_objectState(false)|lower }})</small>{% endif %}
    {% set itemActions = knp_menu_get('MUYourCityModule:ItemActionsMenu:menu', [], { entity: event, area: routeArea, context: 'display' }) %}
    <div class="dropdown">
        <a id="itemActions{{ event.id }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, { template: 'ZikulaMenuModule:Override:actions.html.twig' }) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="muyourcitymodule-event muyourcitymodule-display">

    <dl>
        {% if event.workflowState is not empty and routeArea == 'admin' %}
            <dt>{{ __('State') }}</dt>
            <dd>{{ event.workflowState|muyourcitymodule_listEntry('event', 'workflowState') }}</dd>
        {% endif %}
        {#% if event.name is not empty %}
            <dt>{{ __('Name') }}</dt>
            <dd>{{ event.name }}</dd>
        {% endif %#}
        {% if event.description is not empty %}
            <dt>{{ __('Description') }}</dt>
            <dd>{{ event.description|safeHtml }}</dd>
        {% endif %}
        {% if event.imageOfEvent is not empty %}
            <dt>{{ __('Image of event') }}</dt>
            <dd>{% if event.imageOfEvent is not empty and event.imageOfEventMeta|default %}
                        <a href="{{ event.imageOfEventUrl }}" title="{{ event.getTitleFromDisplayPattern()|e('html_attr') }}"{% if event.imageOfEventMeta.isImage %} class="image-link"{% endif %}>
            {% if event.imageOfEventMeta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'eventImageOfEvent') %}
                <img src="{{ event.imageOfEvent.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ event.getTitleFromDisplayPattern()|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ event.imageOfEventMeta.size|muyourcitymodule_fileSize(event.imageOfEvent.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if event.street is not empty %}
            <dt>{{ __('Street') }}</dt>
            <dd>{{ event.street }}</dd>
        {% endif %}
        {% if event.numberOfStreet is not empty %}
            <dt>{{ __('Number of street') }}</dt>
            <dd>{{ event.numberOfStreet }}</dd>
        {% endif %}
        {% if event.zipCode is not empty %}
            <dt>{{ __('Zip code') }}</dt>
            <dd>{{ event.zipCode }}</dd>
        {% endif %}
        {% if event.city is not empty %}
            <dt>{{ __('City') }}</dt>
            <dd>{{ event.city }}</dd>
        {% endif %}
        {% if event.startDate is not empty %}
            <dt>{{ __('Start date') }}</dt>
            <dd>{{ event.startDate|localizeddate('medium', 'short') }}</dd>
        {% endif %}
        {% if event.endDate is not empty %}
            <dt>{{ __('End date') }}</dt>
            <dd>{{ event.endDate|localizeddate('medium', 'short') }}</dd>
        {% endif %}
        {#% if event.latitude is not empty %}
            <dt>{{ __('Latitude') }}</dt>
            <dd>{{ event.latitude|muyourcitymodule_geoData }}</dd>
        {% endif %}
        {% if event.longitude is not empty %}
            <dt>{{ __('Longitude') }}</dt>
            <dd>{{ event.longitude|muyourcitymodule_geoData }}</dd>
        {% endif %#}
        {% if event.location|default %}
            <dt>{{ __('Location') }}</dt>
            <dd>
              {% if not isQuickView %}
                  <a href="{{ path('muyourcitymodule_location_' ~ routeArea ~ 'display', { 'id': event.location.id, 'slug': event.location.slug }) }}">{% spaceless %}
                    {{ event.location|muyourcitymodule_formattedTitle }}
                  {% endspaceless %}</a>
                  <a id="locationItem{{ event.location.id }}Display" href="{{ path('muyourcitymodule_location_' ~ routeArea ~ 'display', { 'id': event.location.id, 'slug': event.location.slug, 'raw': 1 }) }}" title="{{ __('Open quick view window')|e('html_attr') }}" class="muyourcity-inline-window hidden" data-modal-title="{{ event.location|muyourcitymodule_formattedTitle|e('html_attr') }}"><span class="fa fa-id-card-o"></span></a>
              {% else %}
                  {{ event.location|muyourcitymodule_formattedTitle }}
              {% endif %}
            </dd>
        {% endif %}
        
    </dl>

    <h3 class="muyourcitymodule-map">{{ __('Map') }}</h3>
    <div id="mapContainer" class="muyourcitymodule-mapcontainer">
    </div>
    
    {% if routeArea == 'admin' %}
    {{ include('@MUYourCityModule/Helper/includeStandardFieldsDisplay.html.twig', { obj: event }) }}
    {% endif %}
    
    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='muyourcitymodule.ui_hooks.events.display_view', id=event.id, urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        <h4>{{ providerArea }}</h4>
        {{ hook }}
    {% endfor %}
{% endblock %}
{% block footer %}
    {{ parent() }}
    {{ pageAddAsset('javascript', 'https://maps.google.com/maps/api/js?key=' ~ getModVar('MUYourCityModule', 'googleMapsApiKey', '') ~ '&amp;language=' ~ app.request.locale ~ '&amp;sensor=false') }}
    {{ pageAddAsset('javascript', app.request.basePath ~ '/plugins/Mapstraction/lib/vendor/mxn/mxn.js?(googlev3)') }}
    {% set geoScripts %}
        <script type="text/javascript">
        /* <![CDATA[ */
            ( function($) {
                $(document).ready(function() {
                    mUYourCityInitGeographicalDisplay({{ event.latitude|muyourcitymodule_geoData }}, {{ event.longitude|muyourcitymodule_geoData }}, '{{ getModVar('MUYourCityModule', 'defaultMapType', 'roadmap') }}', {{ getModVar('MUYourCityModule', 'defaultZoomLevel', 18) }})
                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', geoScripts) }}
{% endblock %}

