<?php
/**
 * YourCity.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link http://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\YourCityModule\Form\Type\Base;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Common\Translator\TranslatorTrait;
use Zikula\GroupsModule\Entity\RepositoryInterface\GroupRepositoryInterface;

/**
 * Configuration form type base class.
 */
abstract class AbstractConfigType extends AbstractType
{
    use TranslatorTrait;

    /**
     * @var array
     */
    protected $moduleVars;

    /**
     * ConfigType constructor.
     *
     * @param TranslatorInterface      $translator      Translator service instance
     * @param object                   $moduleVars      Existing module vars
     * @param GroupRepositoryInterface $groupRepository GroupRepository service instance
     */
    public function __construct(
        TranslatorInterface $translator,
        $moduleVars,
        GroupRepositoryInterface $groupRepository
    ) {
        $this->setTranslator($translator);
        $this->moduleVars = $moduleVars;

        foreach (['moderationGroupForLocations'] as $groupFieldName) {
            $groupId = intval($this->moduleVars[$groupFieldName]);
            if ($groupId < 1) {
                $groupId = 2; // fallback to admin group
            }
            $this->moduleVars[$groupFieldName] = $groupRepository->find($groupId);
        }
    }

    /**
     * Sets the translator.
     *
     * @param TranslatorInterface $translator Translator service instance
     */
    public function setTranslator(/*TranslatorInterface */$translator)
    {
        $this->translator = $translator;
    }

    /**
     * @inheritDoc
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $this->addGeneralSettingsFields($builder, $options);
        $this->addModerationFields($builder, $options);
        $this->addListViewsFields($builder, $options);
        $this->addImagesFields($builder, $options);
        $this->addIntegrationFields($builder, $options);
        $this->addGeoFields($builder, $options);

        $builder
            ->add('save', 'Symfony\Component\Form\Extension\Core\Type\SubmitType', [
                'label' => $this->__('Update configuration'),
                'icon' => 'fa-check',
                'attr' => [
                    'class' => 'btn btn-success'
                ]
            ])
            ->add('cancel', 'Symfony\Component\Form\Extension\Core\Type\SubmitType', [
                'label' => $this->__('Cancel'),
                'icon' => 'fa-times',
                'attr' => [
                    'class' => 'btn btn-default',
                    'formnovalidate' => 'formnovalidate'
                ]
            ])
        ;
    }

    /**
     * Adds fields for general settings fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addGeneralSettingsFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('city', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('City') . ':',
                'required' => false,
                'data' => isset($this->moduleVars['city']) ? $this->moduleVars['city'] : '',
                'empty_data' => 'Bremen',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the city.')
                ],
            ])
            ->add('areaCode', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Area code') . ':',
                'required' => false,
                'data' => isset($this->moduleVars['areaCode']) ? $this->moduleVars['areaCode'] : '',
                'empty_data' => '0421',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the area code.')
                ],
            ])
        ;
    }

    /**
     * Adds fields for moderation fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addModerationFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('moderationGroupForLocations', 'Symfony\Bridge\Doctrine\Form\Type\EntityType', [
                'label' => $this->__('Moderation group for locations') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Used to determine moderator user accounts for sending email notifications.')
                ],
                'help' => $this->__('Used to determine moderator user accounts for sending email notifications.'),
                'data' => isset($this->moduleVars['moderationGroupForLocations']) ? $this->moduleVars['moderationGroupForLocations'] : '',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Choose the moderation group for locations.')
                ],// Zikula core should provide a form type for this to hide entity details
                'class' => 'ZikulaGroupsModule:GroupEntity',
                'choice_label' => 'name',
                'choice_value' => 'gid'
            ])
        ;
    }

    /**
     * Adds fields for list views fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addListViewsFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('branchEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Branch entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of branches shown per page')
                ],
                'help' => $this->__('The amount of branches shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['branchEntriesPerPage']) ? $this->moduleVars['branchEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the branch entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnBranchesOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own branches on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to branches of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to branches of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnBranchesOnAccountPage']) ? $this->moduleVars['linkOwnBranchesOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own branches on account page option.')
                ],
            ])
            ->add('locationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of locations shown per page')
                ],
                'help' => $this->__('The amount of locations shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['locationEntriesPerPage']) ? $this->moduleVars['locationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnLocationsOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own locations on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to locations of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to locations of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnLocationsOnAccountPage']) ? $this->moduleVars['linkOwnLocationsOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own locations on account page option.')
                ],
            ])
            ->add('partEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Part entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of parts shown per page')
                ],
                'help' => $this->__('The amount of parts shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['partEntriesPerPage']) ? $this->moduleVars['partEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the part entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnPartsOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own parts on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to parts of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to parts of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnPartsOnAccountPage']) ? $this->moduleVars['linkOwnPartsOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own parts on account page option.')
                ],
            ])
            ->add('imageOfLocationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Image of location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of images of location shown per page')
                ],
                'help' => $this->__('The amount of images of location shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['imageOfLocationEntriesPerPage']) ? $this->moduleVars['imageOfLocationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the image of location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnImagesOfLocationOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own images of location on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to images of location of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to images of location of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnImagesOfLocationOnAccountPage']) ? $this->moduleVars['linkOwnImagesOfLocationOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own images of location on account page option.')
                ],
            ])
            ->add('fileOfLocationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('File of location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of files of location shown per page')
                ],
                'help' => $this->__('The amount of files of location shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['fileOfLocationEntriesPerPage']) ? $this->moduleVars['fileOfLocationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the file of location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnFilesOfLocationOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own files of location on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to files of location of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to files of location of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnFilesOfLocationOnAccountPage']) ? $this->moduleVars['linkOwnFilesOfLocationOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own files of location on account page option.')
                ],
            ])
            ->add('offerEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Offer entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of offers shown per page')
                ],
                'help' => $this->__('The amount of offers shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['offerEntriesPerPage']) ? $this->moduleVars['offerEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the offer entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnOffersOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own offers on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to offers of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to offers of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnOffersOnAccountPage']) ? $this->moduleVars['linkOwnOffersOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own offers on account page option.')
                ],
            ])
            ->add('menuOfLocationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Menu of location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of menus of location shown per page')
                ],
                'help' => $this->__('The amount of menus of location shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['menuOfLocationEntriesPerPage']) ? $this->moduleVars['menuOfLocationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the menu of location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnMenusOfLocationOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own menus of location on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to menus of location of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to menus of location of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnMenusOfLocationOnAccountPage']) ? $this->moduleVars['linkOwnMenusOfLocationOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own menus of location on account page option.')
                ],
            ])
            ->add('partOfMenuEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Part of menu entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of parts of menu shown per page')
                ],
                'help' => $this->__('The amount of parts of menu shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['partOfMenuEntriesPerPage']) ? $this->moduleVars['partOfMenuEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the part of menu entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnPartsOfMenuOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own parts of menu on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to parts of menu of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to parts of menu of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnPartsOfMenuOnAccountPage']) ? $this->moduleVars['linkOwnPartsOfMenuOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own parts of menu on account page option.')
                ],
            ])
            ->add('dishEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Dish entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of dishes shown per page')
                ],
                'help' => $this->__('The amount of dishes shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['dishEntriesPerPage']) ? $this->moduleVars['dishEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the dish entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnDishesOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own dishes on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to dishes of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to dishes of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnDishesOnAccountPage']) ? $this->moduleVars['linkOwnDishesOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own dishes on account page option.')
                ],
            ])
            ->add('eventEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Event entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of events shown per page')
                ],
                'help' => $this->__('The amount of events shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['eventEntriesPerPage']) ? $this->moduleVars['eventEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the event entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnEventsOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own events on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to events of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to events of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnEventsOnAccountPage']) ? $this->moduleVars['linkOwnEventsOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own events on account page option.')
                ],
            ])
            ->add('productEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Product entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of products shown per page')
                ],
                'help' => $this->__('The amount of products shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['productEntriesPerPage']) ? $this->moduleVars['productEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the product entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnProductsOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own products on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to products of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to products of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnProductsOnAccountPage']) ? $this->moduleVars['linkOwnProductsOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own products on account page option.')
                ],
            ])
            ->add('specialOfLocationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Special of location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of specials of location shown per page')
                ],
                'help' => $this->__('The amount of specials of location shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['specialOfLocationEntriesPerPage']) ? $this->moduleVars['specialOfLocationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the special of location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnSpecialsOfLocationOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own specials of location on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to specials of location of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to specials of location of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnSpecialsOfLocationOnAccountPage']) ? $this->moduleVars['linkOwnSpecialsOfLocationOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own specials of location on account page option.')
                ],
            ])
            ->add('serviceofLocationEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Serviceof location entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of services of location shown per page')
                ],
                'help' => $this->__('The amount of services of location shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['serviceofLocationEntriesPerPage']) ? $this->moduleVars['serviceofLocationEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the serviceof location entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnServicesOfLocationOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own services of location on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to services of location of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to services of location of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnServicesOfLocationOnAccountPage']) ? $this->moduleVars['linkOwnServicesOfLocationOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own services of location on account page option.')
                ],
            ])
            ->add('abonnementEntriesPerPage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Abonnement entries per page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The amount of abonnements shown per page')
                ],
                'help' => $this->__('The amount of abonnements shown per page'),
                'required' => false,
                'data' => isset($this->moduleVars['abonnementEntriesPerPage']) ? $this->moduleVars['abonnementEntriesPerPage'] : '',
                'empty_data' => intval('10'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the abonnement entries per page.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('linkOwnAbonnementsOnAccountPage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Link own abonnements on account page') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to add a link to abonnements of the current user on his account page')
                ],
                'help' => $this->__('Whether to add a link to abonnements of the current user on his account page'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['linkOwnAbonnementsOnAccountPage']) ? $this->moduleVars['linkOwnAbonnementsOnAccountPage'] : true),
                'attr' => [
                    'title' => $this->__('The link own abonnements on account page option.')
                ],
            ])
        ;
    }

    /**
     * Adds fields for images fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addImagesFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('enableShrinkingForBranchImageofBranch', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForBranchImageofBranch']) ? $this->moduleVars['enableShrinkingForBranchImageofBranch'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthBranchImageofBranch', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthBranchImageofBranch']) ? $this->moduleVars['shrinkWidthBranchImageofBranch'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthbranchimageofbranch'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightBranchImageofBranch', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightBranchImageofBranch']) ? $this->moduleVars['shrinkHeightBranchImageofBranch'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightbranchimageofbranch'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeBranchImageofBranch', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeBranchImageofBranch']) ? $this->moduleVars['thumbnailModeBranchImageofBranch'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthBranchImageofBranchView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthBranchImageofBranchView']) ? $this->moduleVars['thumbnailWidthBranchImageofBranchView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightBranchImageofBranchView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightBranchImageofBranchView']) ? $this->moduleVars['thumbnailHeightBranchImageofBranchView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthBranchImageofBranchDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthBranchImageofBranchDisplay']) ? $this->moduleVars['thumbnailWidthBranchImageofBranchDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightBranchImageofBranchDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightBranchImageofBranchDisplay']) ? $this->moduleVars['thumbnailHeightBranchImageofBranchDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthBranchImageofBranchEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthBranchImageofBranchEdit']) ? $this->moduleVars['thumbnailWidthBranchImageofBranchEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightBranchImageofBranchEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightBranchImageofBranchEdit']) ? $this->moduleVars['thumbnailHeightBranchImageofBranchEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForLocationLogoOfYourLocation', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForLocationLogoOfYourLocation']) ? $this->moduleVars['enableShrinkingForLocationLogoOfYourLocation'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthLocationLogoOfYourLocation', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthLocationLogoOfYourLocation']) ? $this->moduleVars['shrinkWidthLocationLogoOfYourLocation'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthlocationlogoofyourlocation'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightLocationLogoOfYourLocation', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightLocationLogoOfYourLocation']) ? $this->moduleVars['shrinkHeightLocationLogoOfYourLocation'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightlocationlogoofyourlocation'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeLocationLogoOfYourLocation', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeLocationLogoOfYourLocation']) ? $this->moduleVars['thumbnailModeLocationLogoOfYourLocation'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthLocationLogoOfYourLocationView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationLogoOfYourLocationView']) ? $this->moduleVars['thumbnailWidthLocationLogoOfYourLocationView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationLogoOfYourLocationView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationLogoOfYourLocationView']) ? $this->moduleVars['thumbnailHeightLocationLogoOfYourLocationView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthLocationLogoOfYourLocationDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationLogoOfYourLocationDisplay']) ? $this->moduleVars['thumbnailWidthLocationLogoOfYourLocationDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationLogoOfYourLocationDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationLogoOfYourLocationDisplay']) ? $this->moduleVars['thumbnailHeightLocationLogoOfYourLocationDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthLocationLogoOfYourLocationEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationLogoOfYourLocationEdit']) ? $this->moduleVars['thumbnailWidthLocationLogoOfYourLocationEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationLogoOfYourLocationEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationLogoOfYourLocationEdit']) ? $this->moduleVars['thumbnailHeightLocationLogoOfYourLocationEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForLocationImageOfLocation', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForLocationImageOfLocation']) ? $this->moduleVars['enableShrinkingForLocationImageOfLocation'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthLocationImageOfLocation', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthLocationImageOfLocation']) ? $this->moduleVars['shrinkWidthLocationImageOfLocation'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthlocationimageoflocation'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightLocationImageOfLocation', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightLocationImageOfLocation']) ? $this->moduleVars['shrinkHeightLocationImageOfLocation'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightlocationimageoflocation'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeLocationImageOfLocation', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeLocationImageOfLocation']) ? $this->moduleVars['thumbnailModeLocationImageOfLocation'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthLocationImageOfLocationView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationImageOfLocationView']) ? $this->moduleVars['thumbnailWidthLocationImageOfLocationView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationImageOfLocationView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationImageOfLocationView']) ? $this->moduleVars['thumbnailHeightLocationImageOfLocationView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthLocationImageOfLocationDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationImageOfLocationDisplay']) ? $this->moduleVars['thumbnailWidthLocationImageOfLocationDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationImageOfLocationDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationImageOfLocationDisplay']) ? $this->moduleVars['thumbnailHeightLocationImageOfLocationDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthLocationImageOfLocationEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthLocationImageOfLocationEdit']) ? $this->moduleVars['thumbnailWidthLocationImageOfLocationEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightLocationImageOfLocationEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightLocationImageOfLocationEdit']) ? $this->moduleVars['thumbnailHeightLocationImageOfLocationEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForPartImageOfPart', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForPartImageOfPart']) ? $this->moduleVars['enableShrinkingForPartImageOfPart'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthPartImageOfPart', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthPartImageOfPart']) ? $this->moduleVars['shrinkWidthPartImageOfPart'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthpartimageofpart'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightPartImageOfPart', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightPartImageOfPart']) ? $this->moduleVars['shrinkHeightPartImageOfPart'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightpartimageofpart'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModePartImageOfPart', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModePartImageOfPart']) ? $this->moduleVars['thumbnailModePartImageOfPart'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthPartImageOfPartView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthPartImageOfPartView']) ? $this->moduleVars['thumbnailWidthPartImageOfPartView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightPartImageOfPartView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightPartImageOfPartView']) ? $this->moduleVars['thumbnailHeightPartImageOfPartView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthPartImageOfPartDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthPartImageOfPartDisplay']) ? $this->moduleVars['thumbnailWidthPartImageOfPartDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightPartImageOfPartDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightPartImageOfPartDisplay']) ? $this->moduleVars['thumbnailHeightPartImageOfPartDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthPartImageOfPartEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthPartImageOfPartEdit']) ? $this->moduleVars['thumbnailWidthPartImageOfPartEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightPartImageOfPartEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightPartImageOfPartEdit']) ? $this->moduleVars['thumbnailHeightPartImageOfPartEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForImageOfLocationImage', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForImageOfLocationImage']) ? $this->moduleVars['enableShrinkingForImageOfLocationImage'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthImageOfLocationImage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthImageOfLocationImage']) ? $this->moduleVars['shrinkWidthImageOfLocationImage'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthimageoflocationimage'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightImageOfLocationImage', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightImageOfLocationImage']) ? $this->moduleVars['shrinkHeightImageOfLocationImage'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightimageoflocationimage'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeImageOfLocationImage', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeImageOfLocationImage']) ? $this->moduleVars['thumbnailModeImageOfLocationImage'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthImageOfLocationImageView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthImageOfLocationImageView']) ? $this->moduleVars['thumbnailWidthImageOfLocationImageView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightImageOfLocationImageView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightImageOfLocationImageView']) ? $this->moduleVars['thumbnailHeightImageOfLocationImageView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthImageOfLocationImageDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthImageOfLocationImageDisplay']) ? $this->moduleVars['thumbnailWidthImageOfLocationImageDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightImageOfLocationImageDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightImageOfLocationImageDisplay']) ? $this->moduleVars['thumbnailHeightImageOfLocationImageDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthImageOfLocationImageEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthImageOfLocationImageEdit']) ? $this->moduleVars['thumbnailWidthImageOfLocationImageEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightImageOfLocationImageEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightImageOfLocationImageEdit']) ? $this->moduleVars['thumbnailHeightImageOfLocationImageEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForOfferImageOfOffer', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForOfferImageOfOffer']) ? $this->moduleVars['enableShrinkingForOfferImageOfOffer'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthOfferImageOfOffer', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthOfferImageOfOffer']) ? $this->moduleVars['shrinkWidthOfferImageOfOffer'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthofferimageofoffer'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightOfferImageOfOffer', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightOfferImageOfOffer']) ? $this->moduleVars['shrinkHeightOfferImageOfOffer'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightofferimageofoffer'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeOfferImageOfOffer', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeOfferImageOfOffer']) ? $this->moduleVars['thumbnailModeOfferImageOfOffer'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthOfferImageOfOfferView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthOfferImageOfOfferView']) ? $this->moduleVars['thumbnailWidthOfferImageOfOfferView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightOfferImageOfOfferView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightOfferImageOfOfferView']) ? $this->moduleVars['thumbnailHeightOfferImageOfOfferView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthOfferImageOfOfferDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthOfferImageOfOfferDisplay']) ? $this->moduleVars['thumbnailWidthOfferImageOfOfferDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightOfferImageOfOfferDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightOfferImageOfOfferDisplay']) ? $this->moduleVars['thumbnailHeightOfferImageOfOfferDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthOfferImageOfOfferEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthOfferImageOfOfferEdit']) ? $this->moduleVars['thumbnailWidthOfferImageOfOfferEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightOfferImageOfOfferEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightOfferImageOfOfferEdit']) ? $this->moduleVars['thumbnailHeightOfferImageOfOfferEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForMenuOfLocationImageOfMenu', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForMenuOfLocationImageOfMenu']) ? $this->moduleVars['enableShrinkingForMenuOfLocationImageOfMenu'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthMenuOfLocationImageOfMenu', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthMenuOfLocationImageOfMenu']) ? $this->moduleVars['shrinkWidthMenuOfLocationImageOfMenu'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthmenuoflocationimageofmenu'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightMenuOfLocationImageOfMenu', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightMenuOfLocationImageOfMenu']) ? $this->moduleVars['shrinkHeightMenuOfLocationImageOfMenu'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightmenuoflocationimageofmenu'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeMenuOfLocationImageOfMenu', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeMenuOfLocationImageOfMenu']) ? $this->moduleVars['thumbnailModeMenuOfLocationImageOfMenu'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthMenuOfLocationImageOfMenuView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuView']) ? $this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightMenuOfLocationImageOfMenuView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuView']) ? $this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthMenuOfLocationImageOfMenuDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuDisplay']) ? $this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightMenuOfLocationImageOfMenuDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuDisplay']) ? $this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthMenuOfLocationImageOfMenuEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuEdit']) ? $this->moduleVars['thumbnailWidthMenuOfLocationImageOfMenuEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightMenuOfLocationImageOfMenuEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuEdit']) ? $this->moduleVars['thumbnailHeightMenuOfLocationImageOfMenuEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForDishImageOfDish', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForDishImageOfDish']) ? $this->moduleVars['enableShrinkingForDishImageOfDish'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthDishImageOfDish', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthDishImageOfDish']) ? $this->moduleVars['shrinkWidthDishImageOfDish'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidthdishimageofdish'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightDishImageOfDish', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightDishImageOfDish']) ? $this->moduleVars['shrinkHeightDishImageOfDish'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheightdishimageofdish'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeDishImageOfDish', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeDishImageOfDish']) ? $this->moduleVars['thumbnailModeDishImageOfDish'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthDishImageOfDishView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthDishImageOfDishView']) ? $this->moduleVars['thumbnailWidthDishImageOfDishView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightDishImageOfDishView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightDishImageOfDishView']) ? $this->moduleVars['thumbnailHeightDishImageOfDishView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthDishImageOfDishDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthDishImageOfDishDisplay']) ? $this->moduleVars['thumbnailWidthDishImageOfDishDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightDishImageOfDishDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightDishImageOfDishDisplay']) ? $this->moduleVars['thumbnailHeightDishImageOfDishDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthDishImageOfDishEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthDishImageOfDishEdit']) ? $this->moduleVars['thumbnailWidthDishImageOfDishEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightDishImageOfDishEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightDishImageOfDishEdit']) ? $this->moduleVars['thumbnailHeightDishImageOfDishEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('enableShrinkingForEventImageOfEvent', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable shrinking') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.')
                ],
                'help' => $this->__('Whether to enable shrinking huge images to maximum dimensions. Stores downscaled version of the original image.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableShrinkingForEventImageOfEvent']) ? $this->moduleVars['enableShrinkingForEventImageOfEvent'] : false),
                'attr' => [
                    'title' => $this->__('The enable shrinking option.'),
                    'class' => 'shrink-enabler'
                ],
            ])
            ->add('shrinkWidthEventImageOfEvent', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink width') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image width in pixels.')
                ],
                'help' => $this->__('The maximum image width in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkWidthEventImageOfEvent']) ? $this->moduleVars['shrinkWidthEventImageOfEvent'] : '',
                'empty_data' => intval('800'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink width.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkwidtheventimageofevent'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('shrinkHeightEventImageOfEvent', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Shrink height') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The maximum image height in pixels.')
                ],
                'help' => $this->__('The maximum image height in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['shrinkHeightEventImageOfEvent']) ? $this->moduleVars['shrinkHeightEventImageOfEvent'] : '',
                'empty_data' => intval('600'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the shrink height.') . ' ' . $this->__('Only digits are allowed.'),
                    'class' => 'shrinkdimension-shrinkheighteventimageofevent'
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailModeEventImageOfEvent', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Thumbnail mode') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail mode (inset or outbound).')
                ],
                'help' => $this->__('Thumbnail mode (inset or outbound).'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailModeEventImageOfEvent']) ? $this->moduleVars['thumbnailModeEventImageOfEvent'] : '',
                'empty_data' => 'inset',
                'attr' => [
                    'title' => $this->__('Choose the thumbnail mode.')
                ],'choices' => [
                    $this->__('Inset') => 'inset'
                    ,$this->__('Outbound') => 'outbound'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('thumbnailWidthEventImageOfEventView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthEventImageOfEventView']) ? $this->moduleVars['thumbnailWidthEventImageOfEventView'] : '',
                'empty_data' => intval('32'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightEventImageOfEventView', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height view') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on view pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on view pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightEventImageOfEventView']) ? $this->moduleVars['thumbnailHeightEventImageOfEventView'] : '',
                'empty_data' => intval('24'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height view.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthEventImageOfEventDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthEventImageOfEventDisplay']) ? $this->moduleVars['thumbnailWidthEventImageOfEventDisplay'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightEventImageOfEventDisplay', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height display') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on display pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on display pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightEventImageOfEventDisplay']) ? $this->moduleVars['thumbnailHeightEventImageOfEventDisplay'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height display.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailWidthEventImageOfEventEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail width edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail width on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail width on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailWidthEventImageOfEventEdit']) ? $this->moduleVars['thumbnailWidthEventImageOfEventEdit'] : '',
                'empty_data' => intval('240'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail width edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
            ->add('thumbnailHeightEventImageOfEventEdit', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Thumbnail height edit') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Thumbnail height on edit pages in pixels.')
                ],
                'help' => $this->__('Thumbnail height on edit pages in pixels.'),
                'required' => false,
                'data' => isset($this->moduleVars['thumbnailHeightEventImageOfEventEdit']) ? $this->moduleVars['thumbnailHeightEventImageOfEventEdit'] : '',
                'empty_data' => intval('180'),
                'attr' => [
                    'maxlength' => 4,
                    'title' => $this->__('Enter the thumbnail height edit.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0,
                'input_group' => ['right' => $this->__('pixels')]
            ])
        ;
    }

    /**
     * Adds fields for integration fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addIntegrationFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('enabledFinderTypes', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Enabled finder types') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Which sections are supported in the Finder component (used by Scribite plug-ins).')
                ],
                'help' => $this->__('Which sections are supported in the Finder component (used by Scribite plug-ins).'),
                'required' => false,
                'data' => isset($this->moduleVars['enabledFinderTypes']) ? $this->moduleVars['enabledFinderTypes'] : '',
                'empty_data' => '',
                'attr' => [
                    'title' => $this->__('Choose the enabled finder types.')
                ],'choices' => [
                    $this->__('Branch') => 'branch'
                    ,$this->__('Location') => 'location'
                    ,$this->__('Part') => 'part'
                    ,$this->__('Image of location') => 'imageOfLocation'
                    ,$this->__('File of location') => 'fileOfLocation'
                    ,$this->__('Offer') => 'offer'
                    ,$this->__('Menu of location') => 'menuOfLocation'
                    ,$this->__('Part of menu') => 'partOfMenu'
                    ,$this->__('Dish') => 'dish'
                    ,$this->__('Event') => 'event'
                    ,$this->__('Product') => 'product'
                    ,$this->__('Special of location') => 'specialOfLocation'
                    ,$this->__('Serviceof location') => 'serviceofLocation'
                ],
                'choices_as_values' => true,
                'multiple' => true
            ])
        ;
    }

    /**
     * Adds fields for geo fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addGeoFields(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('googleMapsApiKey', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Google maps api key') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The API key required for Google Maps.')
                ],
                'help' => $this->__('The API key required for Google Maps.'),
                'required' => false,
                'data' => isset($this->moduleVars['googleMapsApiKey']) ? $this->moduleVars['googleMapsApiKey'] : '',
                'empty_data' => '',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the google maps api key.')
                ],
            ])
            ->add('defaultLatitude', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Default latitude') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The default latitude.')
                ],
                'help' => $this->__('The default latitude.'),
                'required' => false,
                'data' => isset($this->moduleVars['defaultLatitude']) ? $this->moduleVars['defaultLatitude'] : '',
                'empty_data' => '0.00',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the default latitude.')
                ],
            ])
            ->add('defaultLongitude', 'Symfony\Component\Form\Extension\Core\Type\TextType', [
                'label' => $this->__('Default longitude') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The default longitude.')
                ],
                'help' => $this->__('The default longitude.'),
                'required' => false,
                'data' => isset($this->moduleVars['defaultLongitude']) ? $this->moduleVars['defaultLongitude'] : '',
                'empty_data' => '0.00',
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the default longitude.')
                ],
            ])
            ->add('defaultMapType', 'Symfony\Component\Form\Extension\Core\Type\ChoiceType', [
                'label' => $this->__('Default map type') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The default map type.')
                ],
                'help' => $this->__('The default map type.'),
                'required' => false,
                'data' => isset($this->moduleVars['defaultMapType']) ? $this->moduleVars['defaultMapType'] : '',
                'empty_data' => 'roadmap',
                'attr' => [
                    'title' => $this->__('Choose the default map type.')
                ],'choices' => [
                    $this->__('Roadmap') => 'roadmap'
                    ,$this->__('Satellite') => 'satellite'
                    ,$this->__('Hybrid') => 'hybrid'
                    ,$this->__('Physical') => 'physical'
                ],
                'choices_as_values' => true,
                'multiple' => false
            ])
            ->add('defaultZoomLevel', 'Symfony\Component\Form\Extension\Core\Type\IntegerType', [
                'label' => $this->__('Default zoom level') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('The default zoom level.')
                ],
                'help' => $this->__('The default zoom level.'),
                'required' => false,
                'data' => isset($this->moduleVars['defaultZoomLevel']) ? $this->moduleVars['defaultZoomLevel'] : '',
                'empty_data' => intval('18'),
                'attr' => [
                    'maxlength' => 255,
                    'title' => $this->__('Enter the default zoom level.') . ' ' . $this->__('Only digits are allowed.')
                ],'scale' => 0
            ])
            ->add('enableLocationGeoLocation', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable location geo location') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable geo location functionality for locations or not.')
                ],
                'help' => $this->__('Whether to enable geo location functionality for locations or not.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableLocationGeoLocation']) ? $this->moduleVars['enableLocationGeoLocation'] : false),
                'attr' => [
                    'title' => $this->__('The enable location geo location option.')
                ],
            ])
            ->add('enableEventGeoLocation', 'Symfony\Component\Form\Extension\Core\Type\CheckboxType', [
                'label' => $this->__('Enable event geo location') . ':',
                'label_attr' => [
                    'class' => 'tooltips',
                    'title' => $this->__('Whether to enable geo location functionality for events or not.')
                ],
                'help' => $this->__('Whether to enable geo location functionality for events or not.'),
                'required' => false,
                'data' => (bool)(isset($this->moduleVars['enableEventGeoLocation']) ? $this->moduleVars['enableEventGeoLocation'] : false),
                'attr' => [
                    'title' => $this->__('The enable event geo location option.')
                ],
            ])
        ;
    }

    /**
     * @inheritDoc
     */
    public function getBlockPrefix()
    {
        return 'muyourcitymodule_config';
    }
}
