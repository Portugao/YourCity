<?php
/**
 * YourCity.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link http://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

namespace MU\YourCityModule\Form\Type;

use MU\YourCityModule\Form\Type\Base\AbstractAbonnementType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;

/**
 * Abonnement editing form type implementation class.
 */
class AbonnementType extends AbstractAbonnementType
{
   /**
     * Adds basic entity fields.
     *
     * @param FormBuilderInterface $builder The form builder
     * @param array                $options The options
     */
    public function addEntityFields(FormBuilderInterface $builder, array $options)
    {
        
        $builder->add('name', TextType::class, [
            'label' => $this->__('Name') . ':',
            'empty_data' => 'Abonnement',
            'attr' => [
                'maxlength' => 255,
                'class' => '',
                'title' => $this->__('Enter the name of the abonnement')
            ],
            'required' => false,
        ]);
        
        $builder->add('showMenus', CheckboxType::class, [
            'label' => $this->__('Show menus') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show menus ?')
            ],
            'required' => false,
        	'data' => true,
        ]);
        
        $builder->add('sendMessageForMenus', CheckboxType::class, [
            'label' => $this->__('Send message for menus') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message for menus ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showOffers', CheckboxType::class, [
            'label' => $this->__('Show offers') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show offers ?')
            ],
            'required' => false,
        	'data' => true,
        ]);
        
        $builder->add('sendMessageForOffers', CheckboxType::class, [
            'label' => $this->__('Send message for offers') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message for offers ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showEvents', CheckboxType::class, [
            'label' => $this->__('Show events') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show events ?')
            ],
            'required' => false,
        	'data' => true,
        ]);
        
        $builder->add('sendMessageForEvents', CheckboxType::class, [
            'label' => $this->__('Send message for events') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message for events ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showProducts', CheckboxType::class, [
            'label' => $this->__('Show products') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show products ?')
            ],
            'required' => false,
        	'data' => true,
        ]);
        
        $builder->add('sendMessageForProducts', CheckboxType::class, [
            'label' => $this->__('Send message for products') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message for products ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showOptionOne', CheckboxType::class, [
            'label' => $this->__('Show option one') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show option one ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('sendMessageToOptionOne', CheckboxType::class, [
            'label' => $this->__('Send message to option one') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message to option one ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showOptionTwo', CheckboxType::class, [
            'label' => $this->__('Show option two') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show option two ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('sendMessageToOptionTwo', CheckboxType::class, [
            'label' => $this->__('Send message to option two') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message to option two ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('showOptionThree', CheckboxType::class, [
            'label' => $this->__('Show option three') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('show option three ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('sendMessageToOptionThree', CheckboxType::class, [
            'label' => $this->__('Send message to option three') . ':',
            'attr' => [
                'class' => '',
                'title' => $this->__('send message to option three ?')
            ],
            'required' => false,
        ]);
        
        $builder->add('positionOfAbo', IntegerType::class, [
            'label' => $this->__('Position of abo') . ':',
            'empty_data' => '0',
            'attr' => [
                'maxlength' => 11,
                'class' => ' validate-digits',
                'title' => $this->__('Enter the position of abo of the abonnement.') . ' ' . $this->__('Only digits are allowed.')
            ],
            'required' => true,
            'scale' => 0
        ]);
    }
}
